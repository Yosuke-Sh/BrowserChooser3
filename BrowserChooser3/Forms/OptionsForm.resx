<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>